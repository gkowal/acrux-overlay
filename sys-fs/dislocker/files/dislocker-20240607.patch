diff '--color=auto' -uNr dislocker-0.7.3/CHANGELOG.md dislocker-master/CHANGELOG.md
--- dislocker-0.7.3/CHANGELOG.md	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/CHANGELOG.md	2024-06-07 06:17:42.000000000 -0300
@@ -11,7 +11,7 @@
 - Feature improvement:
     - Reported NTFS volume size is more accurate (thanks @haobinnan)
     - Add ability to decrypt from a VMK file (thanks Seunghun Han)
-    - Add ability to read the user password from the envrironment variable `DISLOCKER_PASSWORD` (thanks @mhogomchungu)
+    - Add ability to read the user password from the environment variable `DISLOCKER_PASSWORD` (thanks @mhogomchungu)
     - Add ability to read the user password from pipes (thanks @mhogomchungu)
     - Decryption/encryption speed has been improved by disabling faulty threading
 
@@ -27,7 +27,7 @@
     option for the offset had to be changed. It is now `-O`;
     - dislocker on FreeBSD can now read devices, not just partition dumps.
 
-- Compatiblity improvement:
+- Compatibility improvement:
     - OSX support and dependencies have been updated;
     - Thanks to Eric Johnson, from Leidos, a BitBake recipe is now available.
 
diff '--color=auto' -uNr dislocker-0.7.3/cmake/FindFUSE.cmake dislocker-master/cmake/FindFUSE.cmake
--- dislocker-0.7.3/cmake/FindFUSE.cmake	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/cmake/FindFUSE.cmake	2024-06-07 06:17:42.000000000 -0300
@@ -9,26 +9,7 @@
         SET (FUSE_FIND_QUIETLY TRUE)
 ENDIF (FUSE_INCLUDE_DIRS)
 
-# find includes
-FIND_PATH (FUSE_INCLUDE_DIRS fuse.h
-        /usr/local/include/osxfuse
-        /usr/local/include
-        /usr/include
-)
+FIND_PACKAGE (PkgConfig REQUIRED)
+pkg_check_modules (FUSE REQUIRED fuse)
 
-# find lib
-if (APPLE)
-    SET(FUSE_NAMES libosxfuse.dylib fuse)
-else (APPLE)
-    SET(FUSE_NAMES fuse)
-endif (APPLE)
-FIND_LIBRARY(FUSE_LIBRARIES
-        NAMES ${FUSE_NAMES}
-        PATHS /lib64 /lib /usr/lib64 /usr/lib /usr/local/lib64 /usr/local/lib
-)
-
-include ("FindPackageHandleStandardArgs")
-find_package_handle_standard_args ("FUSE" DEFAULT_MSG
-    FUSE_INCLUDE_DIRS FUSE_LIBRARIES)
-
-mark_as_advanced (FUSE_INCLUDE_DIRS FUSE_LIBRARIES)
+mark_as_advanced (FUSE_INCLUDE_DIRS FUSE_LIBRARIES FUSE_LIBRARY_DIRS)
diff '--color=auto' -uNr dislocker-0.7.3/cmake/FindPolarSSL.cmake dislocker-master/cmake/FindPolarSSL.cmake
--- dislocker-0.7.3/cmake/FindPolarSSL.cmake	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/cmake/FindPolarSSL.cmake	2024-06-07 06:17:42.000000000 -0300
@@ -49,6 +49,19 @@
   return()
 endif()
 
+if( "${CMAKE_C_COMPILER}" STREQUAL "/Library/Developer/CommandLineTools/usr/bin/cc" )
+  set(CMAKE_C_COMPILER cc)
+endif()
+
+if(APPLE)
+  execute_process(
+    COMMAND xcrun --sdk macosx --show-sdk-path
+    OUTPUT_VARIABLE envSdkRoot
+    OUTPUT_STRIP_TRAILING_WHITESPACE
+  )
+  set(ENV{SDKROOT} "${envSdkRoot}")
+endif()
+
 if( NOT CMAKE_CROSSCOMPILING )
   execute_process(
     COMMAND echo "#include <${POLARSSL_INC_FOLDER}/version.h>\n#include <stdio.h>\nint main(){printf(${POLARSSL_REAL_NAME}_VERSION_STRING);return 0;}"
diff '--color=auto' -uNr dislocker-0.7.3/.gitignore dislocker-master/.gitignore
--- dislocker-0.7.3/.gitignore	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/.gitignore	2024-06-07 06:17:42.000000000 -0300
@@ -28,3 +28,10 @@
 cmake_uninstall.cmake
 install_manifest.txt
 
+# macOS produced files
+.DS_Store
+*.dylib
+*.bundle
+
+# Visual Studio Code
+.vscode/
diff '--color=auto' -uNr dislocker-0.7.3/include/dislocker/dislocker.h dislocker-master/include/dislocker/dislocker.h
--- dislocker-0.7.3/include/dislocker/dislocker.h	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/include/dislocker/dislocker.h	2024-06-07 06:17:42.000000000 -0300
@@ -102,4 +102,3 @@
 
 
 #endif /* DISLOCKER_MAIN_H */
-
diff '--color=auto' -uNr dislocker-0.7.3/include/dislocker/encryption/decrypt.h dislocker-master/include/dislocker/encryption/decrypt.h
--- dislocker-0.7.3/include/dislocker/encryption/decrypt.h	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/include/dislocker/encryption/decrypt.h	2024-06-07 06:17:42.000000000 -0300
@@ -76,4 +76,3 @@
 
 
 #endif /* DECRYPT_H */
-
diff '--color=auto' -uNr dislocker-0.7.3/include/dislocker/metadata/datums.h dislocker-master/include/dislocker/metadata/datums.h
--- dislocker-0.7.3/include/dislocker/metadata/datums.h	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/include/dislocker/metadata/datums.h	2024-06-07 06:17:42.000000000 -0300
@@ -42,7 +42,7 @@
 /**
  * Here stand datums' value types stuff
  */
-#define NB_DATUMS_VALUE_TYPES 22
+#define NB_DATUMS_VALUE_TYPES 20
 
 enum value_types
 {
@@ -352,8 +352,6 @@
 	print_datum_generic,
 	print_datum_generic,
 	print_datum_generic,
-	print_datum_generic,
-	print_datum_generic,
 	print_datum_generic,
 };
 
diff '--color=auto' -uNr dislocker-0.7.3/include/dislocker/metadata/extended_info.h dislocker-master/include/dislocker/metadata/extended_info.h
--- dislocker-0.7.3/include/dislocker/metadata/extended_info.h	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/include/dislocker/metadata/extended_info.h	2024-06-07 06:17:42.000000000 -0300
@@ -32,6 +32,7 @@
  * This structure is new to Windows 8
  * It's the virtualization datum's payload
  */
+#pragma pack (1)
 typedef struct _extended_info {
 	uint16_t unknown1;
 	uint16_t size;
@@ -41,7 +42,12 @@
 	uint32_t convertlog_size;
 	uint32_t sector_size1;
 	uint32_t sector_size2;
+	uint32_t unknown3[6];
+	uint64_t FVE2_da392a22_addr;
+	uint32_t FVE2_da392a22_size;
+	uint32_t unknown4;
 } extended_info_t;
+#pragma pack ()
 
 
 
diff '--color=auto' -uNr dislocker-0.7.3/include/dislocker/metadata/guid.h dislocker-master/include/dislocker/metadata/guid.h
--- dislocker-0.7.3/include/dislocker/metadata/guid.h	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/include/dislocker/metadata/guid.h	2024-06-07 06:17:42.000000000 -0300
@@ -46,4 +46,3 @@
 
 
 #endif // GUID_H
-
diff '--color=auto' -uNr dislocker-0.7.3/include/dislocker/metadata/metadata_config.h dislocker-master/include/dislocker/metadata/metadata_config.h
--- dislocker-0.7.3/include/dislocker/metadata/metadata_config.h	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/include/dislocker/metadata/metadata_config.h	2024-06-07 06:17:42.000000000 -0300
@@ -51,6 +51,9 @@
 	/* States dislocker's metadata initialisation is at or will be stopped at */
 	dis_state_e   curr_state;
 	dis_state_e   init_stop_at;
+
+	/* Readonly mode for EOW support */
+	int readonly;
 };
 
 
diff '--color=auto' -uNr dislocker-0.7.3/include/dislocker/metadata/metadata.h dislocker-master/include/dislocker/metadata/metadata.h
--- dislocker-0.7.3/include/dislocker/metadata/metadata.h	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/include/dislocker/metadata/metadata.h	2024-06-07 06:17:42.000000000 -0300
@@ -92,5 +92,6 @@
 
 uint32_t dis_metadata_backup_sectors_count(dis_metadata_t dis_meta);
 
+int dis_metadata_is_decrypted_state(dis_metadata_t dis_meta);
 
 #endif // METADATA_H
diff '--color=auto' -uNr dislocker-0.7.3/include/dislocker/metadata/vmk.h dislocker-master/include/dislocker/metadata/vmk.h
--- dislocker-0.7.3/include/dislocker/metadata/vmk.h	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/include/dislocker/metadata/vmk.h	2024-06-07 06:17:42.000000000 -0300
@@ -36,7 +36,7 @@
 
 int get_vmk_datum_from_guid(dis_metadata_t dis_meta, guid_t guid, void** vmk_datum);
 
-int get_vmk_datum_from_range(dis_metadata_t dis_meta, uint16_t min_range, uint16_t max_range, void** vmk_datum);
+int get_vmk_datum_from_range(dis_metadata_t dis_meta, uint16_t min_range, uint16_t max_range, void** vmk_datum, void* prev_vmk_datum);
 
 int get_vmk(datum_aes_ccm_t* vmk_datum, uint8_t* recovery_key,
             size_t key_size, datum_key_t** vmk);
diff '--color=auto' -uNr dislocker-0.7.3/include/dislocker/ssl_bindings.h.in dislocker-master/include/dislocker/ssl_bindings.h.in
--- dislocker-0.7.3/include/dislocker/ssl_bindings.h.in	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/include/dislocker/ssl_bindings.h.in	2024-06-07 06:17:42.000000000 -0300
@@ -26,8 +26,13 @@
 /*
  * Here stand the bindings for polarssl SHA256/SHA2/SHA-2 function for dislocker
  */
-#include "@POLARSSL_INC_FOLDER@/config.h"
 #include "@POLARSSL_INC_FOLDER@/version.h"
+#if MBEDTLS_VERSION_MAJOR >= 3
+#include "@POLARSSL_INC_FOLDER@/mbedtls_config.h"
+#include "@POLARSSL_INC_FOLDER@/compat-2.x.h"
+#else
+#include "@POLARSSL_INC_FOLDER@/config.h"
+#endif
 #include "@POLARSSL_INC_FOLDER@/aes.h"
 
 // Function's name changed
diff '--color=auto' -uNr dislocker-0.7.3/INSTALL.md dislocker-master/INSTALL.md
--- dislocker-0.7.3/INSTALL.md	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/INSTALL.md	2024-06-07 06:17:42.000000000 -0300
@@ -9,6 +9,7 @@
 - Compiler, gcc or clang;
 - cmake (at least version 2.6);
 - make (or gmake, for FreeBSD);
+- pkg-config;
 - Headers for FUSE;
 - Headers for mbedTLS (previously known as PolarSSL);
 - A partition encrypted with BitLocker, from Windows Vista, 7 or 8.
@@ -17,13 +18,13 @@
 If you have Ruby headers, the library will compile with some Ruby bindings and
 another program - see the NOTE section below - will be available.
 
-For Debian-like distos based on Debian Jessie or Ubuntu 14.04 or older:
+For Debian-like distros based on Debian Jessie or Ubuntu 14.04 or older:
 
 - `aptitude install gcc cmake make libfuse-dev libpolarssl-dev ruby-dev`
 
-For Debian-like distos based on Debian Stretch or Ubuntu 16.04 or later:
+For Debian-like distros based on Debian Stretch or Ubuntu 16.04 or later:
 
-- `aptitude install gcc cmake make libfuse-dev libmbedtls-dev ruby-dev`
+- `aptitude install gcc cmake make libfuse-dev libmbedtls-dev ruby-dev pkgconf`
 
 For Fedora-like:
 
@@ -47,6 +48,11 @@
 
 Note that the code expects at least FUSE 2.6.
 
+For macOS:
+
+Install HomeBrew https://brew.sh
+- `brew install cmake pkgconf mbedtls`
+
 # INSTALLING
 
 Each OS type has its own section below, beware to follow yours:
@@ -56,12 +62,11 @@
 Just install Homebrew (http://brew.sh/) and run the following commands:
 ```
 brew update
-brew install Caskroom/cask/osxfuse
+brew install Caskroom/cask/macfuse
 brew install src/dislocker.rb
 ```
 This will install dislocker.
 
-
 ## If you're on FreeBSD...
 
 Follow the instructions below (next subsection) by replacing 'make' with 'gmake'.
@@ -164,5 +169,3 @@
 $ cmake .
 $ make dislocker-fuse
 ```
-
-
diff '--color=auto' -uNr dislocker-0.7.3/LICENSE.txt dislocker-master/LICENSE.txt
--- dislocker-0.7.3/LICENSE.txt	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/LICENSE.txt	2024-06-07 06:17:42.000000000 -0300
@@ -1,207 +1,339 @@
-                           GNU GENERAL PUBLIC LICENSE
-                              Version 2, June 1991
+                    GNU GENERAL PUBLIC LICENSE
+                       Version 2, June 1991
 
-Copyright (C) 1989, 1991 Free Software Foundation, Inc.  
-51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
-
-Everyone is permitted to copy and distribute verbatim copies
-of this license document, but changing it is not allowed.
-
-
-TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
-
-0. This License applies to any program or other work which contains a notice
-placed by the copyright holder saying it may be distributed under the terms of
-this General Public License. The "Program", below, refers to any such program or
-work, and a "work based on the Program" means either the Program or any
-derivative work under copyright law: that is to say, a work containing the
-Program or a portion of it, either verbatim or with modifications and/or
-translated into another language. (Hereinafter, translation is included without
-limitation in the term "modification".) Each licensee is addressed as "you".
-
-Activities other than copying, distribution and modification are not covered by
-this License; they are outside its scope. The act of running the Program is not
-restricted, and the output from the Program is covered only if its contents
-constitute a work based on the Program (independent of having been made by
-running the Program). Whether that is true depends on what the Program does.
-
-1. You may copy and distribute verbatim copies of the Program's source code as
-you receive it, in any medium, provided that you conspicuously and appropriately
-publish on each copy an appropriate copyright notice and disclaimer of warranty;
-keep intact all the notices that refer to this License and to the absence of any
-warranty; and give any other recipients of the Program a copy of this License
+ Copyright (C) 1989, 1991 Free Software Foundation, Inc.,
+ 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+                            Preamble
+
+  The licenses for most software are designed to take away your
+freedom to share and change it.  By contrast, the GNU General Public
+License is intended to guarantee your freedom to share and change free
+software--to make sure the software is free for all its users.  This
+General Public License applies to most of the Free Software
+Foundation's software and to any other program whose authors commit to
+using it.  (Some other Free Software Foundation software is covered by
+the GNU Lesser General Public License instead.)  You can apply it to
+your programs, too.
+
+  When we speak of free software, we are referring to freedom, not
+price.  Our General Public Licenses are designed to make sure that you
+have the freedom to distribute copies of free software (and charge for
+this service if you wish), that you receive source code or can get it
+if you want it, that you can change the software or use pieces of it
+in new free programs; and that you know you can do these things.
+
+  To protect your rights, we need to make restrictions that forbid
+anyone to deny you these rights or to ask you to surrender the rights.
+These restrictions translate to certain responsibilities for you if you
+distribute copies of the software, or if you modify it.
+
+  For example, if you distribute copies of such a program, whether
+gratis or for a fee, you must give the recipients all the rights that
+you have.  You must make sure that they, too, receive or can get the
+source code.  And you must show them these terms so they know their
+rights.
+
+  We protect your rights with two steps: (1) copyright the software, and
+(2) offer you this license which gives you legal permission to copy,
+distribute and/or modify the software.
+
+  Also, for each author's protection and ours, we want to make certain
+that everyone understands that there is no warranty for this free
+software.  If the software is modified by someone else and passed on, we
+want its recipients to know that what they have is not the original, so
+that any problems introduced by others will not reflect on the original
+authors' reputations.
+
+  Finally, any free program is threatened constantly by software
+patents.  We wish to avoid the danger that redistributors of a free
+program will individually obtain patent licenses, in effect making the
+program proprietary.  To prevent this, we have made it clear that any
+patent must be licensed for everyone's free use or not licensed at all.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.
+
+                    GNU GENERAL PUBLIC LICENSE
+   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
+
+  0. This License applies to any program or other work which contains
+a notice placed by the copyright holder saying it may be distributed
+under the terms of this General Public License.  The "Program", below,
+refers to any such program or work, and a "work based on the Program"
+means either the Program or any derivative work under copyright law:
+that is to say, a work containing the Program or a portion of it,
+either verbatim or with modifications and/or translated into another
+language.  (Hereinafter, translation is included without limitation in
+the term "modification".)  Each licensee is addressed as "you".
+
+Activities other than copying, distribution and modification are not
+covered by this License; they are outside its scope.  The act of
+running the Program is not restricted, and the output from the Program
+is covered only if its contents constitute a work based on the
+Program (independent of having been made by running the Program).
+Whether that is true depends on what the Program does.
+
+  1. You may copy and distribute verbatim copies of the Program's
+source code as you receive it, in any medium, provided that you
+conspicuously and appropriately publish on each copy an appropriate
+copyright notice and disclaimer of warranty; keep intact all the
+notices that refer to this License and to the absence of any warranty;
+and give any other recipients of the Program a copy of this License
 along with the Program.
 
-You may charge a fee for the physical act of transferring a copy, and you may at
-your option offer warranty protection in exchange for a fee.
+You may charge a fee for the physical act of transferring a copy, and
+you may at your option offer warranty protection in exchange for a fee.
 
-2. You may modify your copy or copies of the Program or any portion of it, thus
-forming a work based on the Program, and copy and distribute such modifications
-or work under the terms of Section 1 above, provided that you also meet all of
-these conditions:
-
-  a) You must cause the modified files to carry prominent notices stating that
-  you changed the files and the date of any change. 
-  b) You must cause any work that you distribute or publish, that in whole or in
-  part contains or is derived from the Program or any part thereof, to be
-  licensed as a whole at no charge to all third parties under the terms of this
-  License. 
-  c) If the modified program normally reads commands interactively when run, you
-  must cause it, when started running for such interactive use in the most
-  ordinary way, to print or display an announcement including an appropriate
-  copyright notice and a notice that there is no warranty (or else, saying that
-  you provide a warranty) and that users may redistribute the program under
-  these conditions, and telling the user how to view a copy of this License.
-  (Exception: if the Program itself is interactive but does not normally print
-  such an announcement, your work based on the Program is not required to print
-  an announcement.) 
-
-These requirements apply to the modified work as a whole. If identifiable
-sections of that work are not derived from the Program, and can be reasonably
-considered independent and separate works in themselves, then this License, and
-its terms, do not apply to those sections when you distribute them as separate
-works. But when you distribute the same sections as part of a whole which is a
-work based on the Program, the distribution of the whole must be on the terms of
-this License, whose permissions for other licensees extend to the entire whole,
-and thus to each and every part regardless of who wrote it.
-
-Thus, it is not the intent of this section to claim rights or contest your
-rights to work written entirely by you; rather, the intent is to exercise the
-right to control the distribution of derivative or collective works based on the
-Program.
-
-In addition, mere aggregation of another work not based on the Program with the
-Program (or with a work based on the Program) on a volume of a storage or
-distribution medium does not bring the other work under the scope of this
-License.
-
-3. You may copy and distribute the Program (or a work based on it, under
-Section 2) in object code or executable form under the terms of Sections 1 and 2
-above provided that you also do one of the following:
-
-  a) Accompany it with the complete corresponding machine-readable source code,
-  which must be distributed under the terms of Sections 1 and 2 above on a
-  medium customarily used for software interchange; or, 
-  b) Accompany it with a written offer, valid for at least three years, to give
-  any third party, for a charge no more than your cost of physically performing
-  source distribution, a complete machine-readable copy of the corresponding
-  source code, to be distributed under the terms of Sections 1 and 2 above on a
-  medium customarily used for software interchange; or, 
-  c) Accompany it with the information you received as to the offer to
-  distribute corresponding source code. (This alternative is allowed only for
-  noncommercial distribution and only if you received the program in object code
-  or executable form with such an offer, in accord with Subsection b above.) 
-
-The source code for a work means the preferred form of the work for making
-modifications to it. For an executable work, complete source code means all the
-source code for all modules it contains, plus any associated interface
-definition files, plus the scripts used to control compilation and installation
-of the executable. However, as a special exception, the source code distributed
-need not include anything that is normally distributed (in either source or
-binary form) with the major components (compiler, kernel, and so on) of the
-operating system on which the executable runs, unless that component itself
-accompanies the executable.
-
-If distribution of executable or object code is made by offering access to copy
-from a designated place, then offering equivalent access to copy the source code
-from the same place counts as distribution of the source code, even though third
-parties are not compelled to copy the source along with the object code.
-
-4. You may not copy, modify, sublicense, or distribute the Program except as
-expressly provided under this License. Any attempt otherwise to copy, modify,
-sublicense or distribute the Program is void, and will automatically terminate
-your rights under this License. However, parties who have received copies, or
-rights, from you under this License will not have their licenses terminated so
-long as such parties remain in full compliance.
-
-5. You are not required to accept this License, since you have not signed it.
-However, nothing else grants you permission to modify or distribute the Program
-or its derivative works. These actions are prohibited by law if you do not
-accept this License. Therefore, by modifying or distributing the Program (or any
-work based on the Program), you indicate your acceptance of this License to do
-so, and all its terms and conditions for copying, distributing or modifying the
-Program or works based on it.
-
-6. Each time you redistribute the Program (or any work based on the Program),
-the recipient automatically receives a license from the original licensor to
-copy, distribute or modify the Program subject to these terms and conditions.
-You may not impose any further restrictions on the recipients' exercise of the
-rights granted herein. You are not responsible for enforcing compliance by third
-parties to this License.
-
-7. If, as a consequence of a court judgment or allegation of patent infringement
-or for any other reason (not limited to patent issues), conditions are imposed
-on you (whether by court order, agreement or otherwise) that contradict the
-conditions of this License, they do not excuse you from the conditions of this
-License. If you cannot distribute so as to satisfy simultaneously your
-obligations under this License and any other pertinent obligations, then as a
-consequence you may not distribute the Program at all. For example, if a patent
-license would not permit royalty-free redistribution of the Program by all those
-who receive copies directly or indirectly through you, then the only way you
-could satisfy both it and this License would be to refrain entirely from
-distribution of the Program.
-
-If any portion of this section is held invalid or unenforceable under any
-particular circumstance, the balance of the section is intended to apply and the
-section as a whole is intended to apply in other circumstances.
-
-It is not the purpose of this section to induce you to infringe any patents or
-other property right claims or to contest validity of any such claims; this
-section has the sole purpose of protecting the integrity of the free software
-distribution system, which is implemented by public license practices. Many
-people have made generous contributions to the wide range of software
-distributed through that system in reliance on consistent application of that
-system; it is up to the author/donor to decide if he or she is willing to
-distribute software through any other system and a licensee cannot impose that
-choice.
-
-This section is intended to make thoroughly clear what is believed to be a
-consequence of the rest of this License.
-
-8. If the distribution and/or use of the Program is restricted in certain
-countries either by patents or by copyrighted interfaces, the original copyright
-holder who places the Program under this License may add an explicit
-geographical distribution limitation excluding those countries, so that
-distribution is permitted only in or among countries not thus excluded. In such
-case, this License incorporates the limitation as if written in the body of this
-License.
-
-9. The Free Software Foundation may publish revised and/or new versions of the
-General Public License from time to time. Such new versions will be similar in
-spirit to the present version, but may differ in detail to address new problems
-or concerns.
-
-Each version is given a distinguishing version number. If the Program specifies
-a version number of this License which applies to it and "any later version",
-you have the option of following the terms and conditions either of that version
-or of any later version published by the Free Software Foundation. If the
-Program does not specify a version number of this License, you may choose any
-version ever published by the Free Software Foundation.
-
-10. If you wish to incorporate parts of the Program into other free programs
-whose distribution conditions are different, write to the author to ask for
-permission. For software which is copyrighted by the Free Software Foundation,
-write to the Free Software Foundation; we sometimes make exceptions for this.
-Our decision will be guided by the two goals of preserving the free status of
-all derivatives of our free software and of promoting the sharing and reuse of
-software generally.
-
-NO WARRANTY
-
-11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE
-PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED
-IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS
-IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT
-NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
-PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE
-PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
-ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
-
-12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL
-ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE
-PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL,
-SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY
-TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING
-RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF
-THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER
-PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. 
+  2. You may modify your copy or copies of the Program or any portion
+of it, thus forming a work based on the Program, and copy and
+distribute such modifications or work under the terms of Section 1
+above, provided that you also meet all of these conditions:
+
+    a) You must cause the modified files to carry prominent notices
+    stating that you changed the files and the date of any change.
+
+    b) You must cause any work that you distribute or publish, that in
+    whole or in part contains or is derived from the Program or any
+    part thereof, to be licensed as a whole at no charge to all third
+    parties under the terms of this License.
+
+    c) If the modified program normally reads commands interactively
+    when run, you must cause it, when started running for such
+    interactive use in the most ordinary way, to print or display an
+    announcement including an appropriate copyright notice and a
+    notice that there is no warranty (or else, saying that you provide
+    a warranty) and that users may redistribute the program under
+    these conditions, and telling the user how to view a copy of this
+    License.  (Exception: if the Program itself is interactive but
+    does not normally print such an announcement, your work based on
+    the Program is not required to print an announcement.)
+
+These requirements apply to the modified work as a whole.  If
+identifiable sections of that work are not derived from the Program,
+and can be reasonably considered independent and separate works in
+themselves, then this License, and its terms, do not apply to those
+sections when you distribute them as separate works.  But when you
+distribute the same sections as part of a whole which is a work based
+on the Program, the distribution of the whole must be on the terms of
+this License, whose permissions for other licensees extend to the
+entire whole, and thus to each and every part regardless of who wrote it.
+
+Thus, it is not the intent of this section to claim rights or contest
+your rights to work written entirely by you; rather, the intent is to
+exercise the right to control the distribution of derivative or
+collective works based on the Program.
+
+In addition, mere aggregation of another work not based on the Program
+with the Program (or with a work based on the Program) on a volume of
+a storage or distribution medium does not bring the other work under
+the scope of this License.
+
+  3. You may copy and distribute the Program (or a work based on it,
+under Section 2) in object code or executable form under the terms of
+Sections 1 and 2 above provided that you also do one of the following:
+
+    a) Accompany it with the complete corresponding machine-readable
+    source code, which must be distributed under the terms of Sections
+    1 and 2 above on a medium customarily used for software interchange; or,
+
+    b) Accompany it with a written offer, valid for at least three
+    years, to give any third party, for a charge no more than your
+    cost of physically performing source distribution, a complete
+    machine-readable copy of the corresponding source code, to be
+    distributed under the terms of Sections 1 and 2 above on a medium
+    customarily used for software interchange; or,
+
+    c) Accompany it with the information you received as to the offer
+    to distribute corresponding source code.  (This alternative is
+    allowed only for noncommercial distribution and only if you
+    received the program in object code or executable form with such
+    an offer, in accord with Subsection b above.)
+
+The source code for a work means the preferred form of the work for
+making modifications to it.  For an executable work, complete source
+code means all the source code for all modules it contains, plus any
+associated interface definition files, plus the scripts used to
+control compilation and installation of the executable.  However, as a
+special exception, the source code distributed need not include
+anything that is normally distributed (in either source or binary
+form) with the major components (compiler, kernel, and so on) of the
+operating system on which the executable runs, unless that component
+itself accompanies the executable.
+
+If distribution of executable or object code is made by offering
+access to copy from a designated place, then offering equivalent
+access to copy the source code from the same place counts as
+distribution of the source code, even though third parties are not
+compelled to copy the source along with the object code.
+
+  4. You may not copy, modify, sublicense, or distribute the Program
+except as expressly provided under this License.  Any attempt
+otherwise to copy, modify, sublicense or distribute the Program is
+void, and will automatically terminate your rights under this License.
+However, parties who have received copies, or rights, from you under
+this License will not have their licenses terminated so long as such
+parties remain in full compliance.
+
+  5. You are not required to accept this License, since you have not
+signed it.  However, nothing else grants you permission to modify or
+distribute the Program or its derivative works.  These actions are
+prohibited by law if you do not accept this License.  Therefore, by
+modifying or distributing the Program (or any work based on the
+Program), you indicate your acceptance of this License to do so, and
+all its terms and conditions for copying, distributing or modifying
+the Program or works based on it.
+
+  6. Each time you redistribute the Program (or any work based on the
+Program), the recipient automatically receives a license from the
+original licensor to copy, distribute or modify the Program subject to
+these terms and conditions.  You may not impose any further
+restrictions on the recipients' exercise of the rights granted herein.
+You are not responsible for enforcing compliance by third parties to
+this License.
+
+  7. If, as a consequence of a court judgment or allegation of patent
+infringement or for any other reason (not limited to patent issues),
+conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot
+distribute so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you
+may not distribute the Program at all.  For example, if a patent
+license would not permit royalty-free redistribution of the Program by
+all those who receive copies directly or indirectly through you, then
+the only way you could satisfy both it and this License would be to
+refrain entirely from distribution of the Program.
+
+If any portion of this section is held invalid or unenforceable under
+any particular circumstance, the balance of the section is intended to
+apply and the section as a whole is intended to apply in other
+circumstances.
+
+It is not the purpose of this section to induce you to infringe any
+patents or other property right claims or to contest validity of any
+such claims; this section has the sole purpose of protecting the
+integrity of the free software distribution system, which is
+implemented by public license practices.  Many people have made
+generous contributions to the wide range of software distributed
+through that system in reliance on consistent application of that
+system; it is up to the author/donor to decide if he or she is willing
+to distribute software through any other system and a licensee cannot
+impose that choice.
+
+This section is intended to make thoroughly clear what is believed to
+be a consequence of the rest of this License.
+
+  8. If the distribution and/or use of the Program is restricted in
+certain countries either by patents or by copyrighted interfaces, the
+original copyright holder who places the Program under this License
+may add an explicit geographical distribution limitation excluding
+those countries, so that distribution is permitted only in or among
+countries not thus excluded.  In such case, this License incorporates
+the limitation as if written in the body of this License.
+
+  9. The Free Software Foundation may publish revised and/or new versions
+of the General Public License from time to time.  Such new versions will
+be similar in spirit to the present version, but may differ in detail to
+address new problems or concerns.
+
+Each version is given a distinguishing version number.  If the Program
+specifies a version number of this License which applies to it and "any
+later version", you have the option of following the terms and conditions
+either of that version or of any later version published by the Free
+Software Foundation.  If the Program does not specify a version number of
+this License, you may choose any version ever published by the Free Software
+Foundation.
+
+  10. If you wish to incorporate parts of the Program into other free
+programs whose distribution conditions are different, write to the author
+to ask for permission.  For software which is copyrighted by the Free
+Software Foundation, write to the Free Software Foundation; we sometimes
+make exceptions for this.  Our decision will be guided by the two goals
+of preserving the free status of all derivatives of our free software and
+of promoting the sharing and reuse of software generally.
+
+                            NO WARRANTY
+
+  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
+FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
+OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
+PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
+OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
+MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
+TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
+PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
+REPAIR OR CORRECTION.
+
+  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
+REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
+INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
+OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
+TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
+YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
+PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
+POSSIBILITY OF SUCH DAMAGES.
+
+                     END OF TERMS AND CONDITIONS
+
+            How to Apply These Terms to Your New Programs
+
+  If you develop a new program, and you want it to be of the greatest
+possible use to the public, the best way to achieve this is to make it
+free software which everyone can redistribute and change under these terms.
+
+  To do so, attach the following notices to the program.  It is safest
+to attach them to the start of each source file to most effectively
+convey the exclusion of warranty; and each file should have at least
+the "copyright" line and a pointer to where the full notice is found.
+
+    <one line to give the program's name and a brief idea of what it does.>
+    Copyright (C) <year>  <name of author>
+
+    This program is free software; you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation; either version 2 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License along
+    with this program; if not, write to the Free Software Foundation, Inc.,
+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+
+Also add information on how to contact you by electronic and paper mail.
+
+If the program is interactive, make it output a short notice like this
+when it starts in an interactive mode:
+
+    Gnomovision version 69, Copyright (C) year name of author
+    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
+    This is free software, and you are welcome to redistribute it
+    under certain conditions; type `show c' for details.
+
+The hypothetical commands `show w' and `show c' should show the appropriate
+parts of the General Public License.  Of course, the commands you use may
+be called something other than `show w' and `show c'; they could even be
+mouse-clicks or menu items--whatever suits your program.
+
+You should also get your employer (if you work as a programmer) or your
+school, if any, to sign a "copyright disclaimer" for the program, if
+necessary.  Here is a sample; alter the names:
+
+  Yoyodyne, Inc., hereby disclaims all copyright interest in the program
+  `Gnomovision' (which makes passes at compilers) written by James Hacker.
+
+  <signature of Ty Coon>, 1 April 1989
+  Ty Coon, President of Vice
+
+This General Public License does not permit incorporating your program into
+proprietary programs.  If your program is a subroutine library, you may
+consider it more useful to permit linking proprietary applications with the
+library.  If this is what you want to do, use the GNU Lesser General
+Public License instead of this License.
diff '--color=auto' -uNr dislocker-0.7.3/README.md dislocker-master/README.md
--- dislocker-0.7.3/README.md	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/README.md	2024-06-07 06:17:42.000000000 -0300
@@ -2,7 +2,6 @@
 
 ## Introduction and explanations
 
-
 This software has been designed to read BitLocker encrypted partitions under a
 Linux system. The driver has the capability to read/write on:
  - Windows Vista, 7, 8, 8.1 and 10 encrypted partitions - that's AES-CBC,
@@ -33,19 +32,14 @@
 Nevertheless, once the partition is decrypted, you can mount your file as any
 NTFS partition.
 
-
 Thanks goes to Rogier Wolff for testing, hugsy for all the OSX support and
 patches, Will Dyson for the patches, and all the people who give feedbacks.
 
-
-
 ## Installation and requirements
 
 See `INSTALL.md` for things dealing with the install process.
 Once installed, see `dislocker(1)` for details on how to use it.
 
-
-
 ## Bugs
 
 There may be bugs, and I'll be happy to hear about it!
@@ -53,8 +47,6 @@
 Feel free to send comments and feedbacks to [dislocker __AT__ hsc __DOT__ fr](),
 or to open an [issue](https://github.com/Aorimn/dislocker/issues).
 
-
-
 ## A note on Bitlocker-To-Go
 
 Microsoft's idea behind BitLocker-To-Go is that computers running Microsoft
@@ -73,8 +65,6 @@
 volume that dislocker works with. The use of dislocker is therefore the same
 whether the volume is a standard BitLocker partition or a BitLocker-To-Go one.
 
-
-
 ## A note on fstab
 
 BitLocker partitions can be mount-ed using the /etc/fstab file and dislocker's
@@ -84,8 +74,6 @@
 /dev/sda2 /mnt/dislocker fuse.dislocker user-password=blah,nofail 0 0
 ```
 
-
-
 ## Note
 
 Five binaries are built when compiling dislocker as described in the `INSTALL.md`
diff '--color=auto' -uNr dislocker-0.7.3/src/accesses/bek/Makefile dislocker-master/src/accesses/bek/Makefile
--- dislocker-0.7.3/src/accesses/bek/Makefile	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/accesses/bek/Makefile	2024-06-07 06:17:42.000000000 -0300
@@ -62,5 +62,3 @@
 clean :
 	@$(MAKE) -C ../../ clean
 	rm -rf -- $(BIN) *.o *~ *.swp *.gcno *.gcda *.gcov
-
-
diff '--color=auto' -uNr dislocker-0.7.3/src/accesses/rp/recovery_password.c dislocker-master/src/accesses/rp/recovery_password.c
--- dislocker-0.7.3/src/accesses/rp/recovery_password.c	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/accesses/rp/recovery_password.c	2024-06-07 06:17:42.000000000 -0300
@@ -70,6 +70,7 @@
 	uint8_t salt[16] = {0,};
 
 	int result = FALSE;
+	void* prev_vmk_datum = NULL;
 
 	/* If the recovery password wasn't provide, ask for it */
 	if(!recovery_password)
@@ -84,99 +85,102 @@
 	                (char *)recovery_password);
 
 
-	/*
-	 * We need a salt contained in the VMK datum associated to the recovery
-	 * password, so go get this salt and the VMK datum first
-	 * We use here the range which should be upper (or equal) than 0x800
-	 */
-	if(!get_vmk_datum_from_range(dis_meta, 0x800, 0xfff, (void**) vmk_datum))
-	{
-		dis_printf(
-			L_ERROR,
-			"Error, can't find a valid and matching VMK datum. Abort.\n"
-		);
-		*vmk_datum = NULL;
-		return FALSE;
-	}
+	while (!result) {
+		/*
+		* We need a salt contained in the VMK datum associated to the recovery
+		* password, so go get this salt and the VMK datum first
+		* We use here the range which should be upper (or equal) than 0x800
+		*/
+		if(!get_vmk_datum_from_range(dis_meta, 0x800, 0xfff, (void**) vmk_datum, prev_vmk_datum))
+		{
+			dis_printf(
+				L_ERROR,
+				"Error, can't find a valid and matching VMK datum. Abort.\n"
+			);
+			*vmk_datum = NULL;
+			return FALSE;
+		}
+		prev_vmk_datum = *vmk_datum;
 
 
-	/*
-	 * We have the datum containing other data, so get in there and take the
-	 * nested one with type 3 (stretch key)
-	 */
-	void* stretch_datum = NULL;
-	if(!get_nested_datumvaluetype(
-			*vmk_datum,
-			DATUMS_VALUE_STRETCH_KEY,
-			&stretch_datum
-		) ||
-	   !stretch_datum)
-	{
-		char* type_str = datumvaluetypestr(DATUMS_VALUE_STRETCH_KEY);
-		dis_printf(
-			L_ERROR,
-			"Error looking for the nested datum of type %hd (%s) in the VMK one"
-			". Internal failure, abort.\n",
-			DATUMS_VALUE_STRETCH_KEY,
-			type_str
-		);
-		dis_free(type_str);
-		*vmk_datum = NULL;
-		return FALSE;
-	}
+		/*
+		* We have the datum containing other data, so get in there and take the
+		* nested one with type 3 (stretch key)
+		*/
+		void* stretch_datum = NULL;
+		if(!get_nested_datumvaluetype(
+				*vmk_datum,
+				DATUMS_VALUE_STRETCH_KEY,
+				&stretch_datum
+			) ||
+		!stretch_datum)
+		{
+			char* type_str = datumvaluetypestr(DATUMS_VALUE_STRETCH_KEY);
+			dis_printf(
+				L_ERROR,
+				"Error looking for the nested datum of type %hd (%s) in the VMK one"
+				". Internal failure, abort.\n",
+				DATUMS_VALUE_STRETCH_KEY,
+				type_str
+			);
+			dis_free(type_str);
+			*vmk_datum = NULL;
+			return FALSE;
+		}
 
 
-	/* The salt is in here, don't forget to keep it somewhere! */
-	memcpy(salt, ((datum_stretch_key_t*) stretch_datum)->salt, 16);
+		/* The salt is in here, don't forget to keep it somewhere! */
+		memcpy(salt, ((datum_stretch_key_t*) stretch_datum)->salt, 16);
 
 
-	/* Get data which can be decrypted with this password */
-	void* aesccm_datum = NULL;
-	if(!get_nested_datumvaluetype(
-			*vmk_datum,
-			DATUMS_VALUE_AES_CCM,
-			&aesccm_datum
-		) ||
-	   !aesccm_datum)
-	{
-		dis_printf(
-			L_ERROR,
-			"Error finding the AES_CCM datum including the VMK. "
-			"Internal failure, abort.\n"
-		);
-		*vmk_datum = NULL;
-		return FALSE;
-	}
+		/* Get data which can be decrypted with this password */
+		void* aesccm_datum = NULL;
+		if(!get_nested_datumvaluetype(
+				*vmk_datum,
+				DATUMS_VALUE_AES_CCM,
+				&aesccm_datum
+			) ||
+		!aesccm_datum)
+		{
+			dis_printf(
+				L_ERROR,
+				"Error finding the AES_CCM datum including the VMK. "
+				"Internal failure, abort.\n"
+			);
+			*vmk_datum = NULL;
+			return FALSE;
+		}
 
 
-	/*
-	 * We have all the things we need to compute the intermediate key from
-	 * the recovery password, so do it!
-	 */
-	recovery_key = dis_malloc(32 * sizeof(uint8_t));
+		/*
+		* We have all the things we need to compute the intermediate key from
+		* the recovery password, so do it!
+		*/
+		recovery_key = dis_malloc(32 * sizeof(uint8_t));
 
-	if(!intermediate_key(recovery_password, salt, recovery_key))
-	{
-		dis_printf(
-			L_ERROR,
-			"Error computing the recovery password to the recovery key. "
-			"Abort.\n"
+		if(!intermediate_key(recovery_password, salt, recovery_key))
+		{
+			dis_printf(
+				L_ERROR,
+				"Error computing the recovery password to the recovery key. "
+				"Abort.\n"
+			);
+			*vmk_datum = NULL;
+			dis_free(recovery_key);
+			return FALSE;
+		}
+
+		/* As the computed key length is always the same, use a direct value */
+		result = get_vmk(
+			(datum_aes_ccm_t*) aesccm_datum,
+			recovery_key,
+			32,
+			(datum_key_t**) vmk_datum
 		);
-		*vmk_datum = NULL;
+
 		dis_free(recovery_key);
-		return FALSE;
 	}
 
-	/* As the computed key length is always the same, use a direct value */
-	result = get_vmk(
-		(datum_aes_ccm_t*) aesccm_datum,
-		recovery_key,
-		32,
-		(datum_key_t**) vmk_datum
-	);
-
-	dis_free(recovery_key);
-
 	return result;
 }
 
@@ -393,7 +397,7 @@
 
 	memclean(iresult, INTERMEDIATE_KEY_LENGTH * sizeof(uint8_t));
 
-	/* We successfuly retrieve the key! */
+	/* We successfully retrieve the key! */
 	return TRUE;
 } // End intermediate_key
 
@@ -590,5 +594,3 @@
 
 	dis_printf(L_INFO, "Intermediate recovery key:\n\t%s\n", s);
 }
-
-
diff '--color=auto' -uNr dislocker-0.7.3/src/accesses/stretch_key.c dislocker-master/src/accesses/stretch_key.c
--- dislocker-0.7.3/src/accesses/stretch_key.c	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/accesses/stretch_key.c	2024-06-07 06:17:42.000000000 -0300
@@ -157,4 +157,3 @@
 
 	return TRUE;
 }
-
diff '--color=auto' -uNr dislocker-0.7.3/src/accesses/user_pass/Makefile dislocker-master/src/accesses/user_pass/Makefile
--- dislocker-0.7.3/src/accesses/user_pass/Makefile	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/accesses/user_pass/Makefile	2024-06-07 06:17:42.000000000 -0300
@@ -73,4 +73,3 @@
 clean :
 	@$(MAKE) -C ../../ clean
 	rm -rf -- $(BIN) *.o *~ *.swp *.gcno *.gcda *.gcov
-
diff '--color=auto' -uNr dislocker-0.7.3/src/accesses/user_pass/user_pass.c dislocker-master/src/accesses/user_pass/user_pass.c
--- dislocker-0.7.3/src/accesses/user_pass/user_pass.c	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/accesses/user_pass/user_pass.c	2024-06-07 06:17:42.000000000 -0300
@@ -89,7 +89,7 @@
 	 * There may be another mean to find the correct datum, but I don't see
 	 * another one here
 	 */
-	if(!get_vmk_datum_from_range(dis_meta, 0x2000, 0x2000, (void**) vmk_datum))
+	if(!get_vmk_datum_from_range(dis_meta, 0x2000, 0x2000, (void**) vmk_datum, NULL))
 	{
 		dis_printf(
 			L_ERROR,
diff '--color=auto' -uNr dislocker-0.7.3/src/CMakeLists.txt dislocker-master/src/CMakeLists.txt
--- dislocker-0.7.3/src/CMakeLists.txt	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/CMakeLists.txt	2024-06-07 06:17:42.000000000 -0300
@@ -17,8 +17,6 @@
 # Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,
 # USA.
 
-set(_Ruby_DEBUG_OUTPUT ON)
-
 if("${CMAKE_SOURCE_DIR}" MATCHES "src/?$")
 	message(FATAL_ERROR "\nPlease execute cmake from the directory above, not the src/ directory.")
 	return()
@@ -92,11 +90,9 @@
 	# Don't use `-read_only_relocs' here as it seems to only work for 32 bits
 	# binaries
 	set (CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -Wl,-bind_at_load")
-	set (FUSE_LIB osxfuse_i64)
 else()
 	# Useless warnings when used within Darwin
 	set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wconversion")
-	set (FUSE_LIB fuse)
 	if("${CMAKE_SYSTEM_NAME}" STREQUAL "FreeBSD")
 		link_directories ( ${LINK_DIRECTORIES} /usr/local/lib )
 	endif()
@@ -129,18 +125,42 @@
 	return ()
 endif()
 
-find_package (Ruby)
-if(RUBY_FOUND  AND  RUBY_INCLUDE_DIRS  AND  RUBY_LIBRARY)
-	include_directories (${RUBY_INCLUDE_DIRS})
-	set (LIB ${LIB} ${RUBY_LIBRARY})
-	add_definitions (-D_HAVE_RUBY=${RUBY_VERSION_STRING})
-	set (SOURCES ${SOURCES} ruby.c)
+# Ruby bindings
+set(WITH_RUBY "AUTO" CACHE STRING "Enable Ruby bindings. Valid values are ON, OFF, or AUTO")
+if (NOT "${WITH_RUBY}" STREQUAL "OFF")
+	set(_Ruby_DEBUG_OUTPUT ON)
+	find_package (Ruby)
+	if(RUBY_FOUND  AND  RUBY_INCLUDE_DIRS  AND  RUBY_LIBRARY)
+		include_directories(${RUBY_INCLUDE_DIRS})
+		set(LIB ${LIB} ${RUBY_LIBRARY})
+		add_definitions(-D_HAVE_RUBY=${RUBY_VERSION_STRING})
+		set(SOURCES ${SOURCES} ruby.c)
+	elseif("${WITH_RUBY}" STREQUAL "ON")
+		message(FATAL_ERROR "Ruby bindings requested, but Ruby could not found")
+	else()
+		message("Ruby not found, Ruby bindings will be disabled")
+	endif()
+else()
+	message("Ruby bindings disabled by user request")
 endif()
 
-find_package (FUSE)
-if(FUSE_FOUND  AND  FUSE_INCLUDE_DIRS  AND  FUSE_LIBRARIES)
-	include_directories (${FUSE_INCLUDE_DIRS})
-	set (LIB ${LIB} ${FUSE_LIBRARIES})
+# FUSE
+# Unlike Ruby which is largely optional, the primary use-case of Dislocker depends on FUSE,
+# so fail when its not found unless explicitly disabled by the user.
+option(WITH_FUSE "Enable FUSE support. Required for mounting BitLocker-encrypted volumes" ON)
+if(WITH_FUSE)
+	find_package (FUSE)
+	if(FUSE_FOUND  AND  FUSE_INCLUDE_DIRS  AND  FUSE_LIBRARIES)
+		include_directories (${FUSE_INCLUDE_DIRS})
+		if(FUSE_LIBRARY_DIRS)
+			link_directories(${FUSE_LIBRARY_DIRS})
+		endif()
+		set (LIB ${LIB} ${FUSE_LIBRARIES})
+	else()
+		message(FATAL_ERROR "FUSE not found. Please install FUSE, or configure Dislocker with -DWITH_FUSE=OFF")
+	endif()
+else()
+	message(WARNING "FUSE support is disabled, Dislocker will be unable to mount BitLocker-encrypted volumes!")
 endif()
 
 # Places
@@ -199,18 +219,22 @@
 
 set (CLEAN_FILES "")
 
-set (BIN_FUSE ${PROJECT_NAME}-fuse)
-add_executable (${BIN_FUSE} ${BIN_FUSE}.c)
-target_link_libraries (${BIN_FUSE} ${FUSE_LIB} ${PROJECT_NAME})
-set_target_properties (${BIN_FUSE} PROPERTIES COMPILE_DEFINITIONS FUSE_USE_VERSION=26)
-set_target_properties (${BIN_FUSE} PROPERTIES LINK_FLAGS "-pie -fPIE")
-add_custom_command (TARGET ${BIN_FUSE} POST_BUILD
-	COMMAND mkdir -p ${CMAKE_BINARY_DIR}/man/
-	COMMAND gzip -c ${DIS_MAN}/${BIN_FUSE}.1 > ${CMAKE_BINARY_DIR}/man/${BIN_FUSE}.1.gz
-)
-set (CLEAN_FILES ${CLEAN_FILES} ${CMAKE_BINARY_DIR}/man/${BIN_FUSE}.1.gz)
-install (TARGETS ${BIN_FUSE} RUNTIME DESTINATION "${bindir}")
-install (FILES ${CMAKE_BINARY_DIR}/man/${BIN_FUSE}.1.gz DESTINATION "${mandir}/man1")
+if(FUSE_FOUND)
+	set (BIN_FUSE ${PROJECT_NAME}-fuse)
+	add_executable (${BIN_FUSE} ${BIN_FUSE}.c)
+	target_link_libraries (${BIN_FUSE} ${FUSE_LIBBRARIES} ${PROJECT_NAME})
+	set_target_properties (${BIN_FUSE} PROPERTIES COMPILE_DEFINITIONS FUSE_USE_VERSION=26)
+	set_target_properties (${BIN_FUSE} PROPERTIES LINK_FLAGS "-pie -fPIE")
+	add_custom_command (TARGET ${BIN_FUSE} POST_BUILD
+		COMMAND mkdir -p ${CMAKE_BINARY_DIR}/man/
+		COMMAND gzip -c ${DIS_MAN}/${BIN_FUSE}.1 > ${CMAKE_BINARY_DIR}/man/${BIN_FUSE}.1.gz
+	)
+	set (CLEAN_FILES ${CLEAN_FILES} ${CMAKE_BINARY_DIR}/man/${BIN_FUSE}.1.gz)
+	install (TARGETS ${BIN_FUSE} RUNTIME DESTINATION "${bindir}")
+	install (FILES ${CMAKE_BINARY_DIR}/man/${BIN_FUSE}.1.gz DESTINATION "${mandir}/man1")
+	install (CODE "execute_process (COMMAND ${CMAKE_COMMAND} -E create_symlink ${BIN_FUSE} \"\$ENV{DESTDIR}${bindir}/${PROJECT_NAME}\")")
+	install (CODE "execute_process (COMMAND ${CMAKE_COMMAND} -E create_symlink ${BIN_FUSE}.1.gz \"\$ENV{DESTDIR}${mandir}/man1/${PROJECT_NAME}.1.gz\")")
+endif()
 
 set (BIN_FILE ${PROJECT_NAME}-file)
 add_executable (${BIN_FILE} ${BIN_FILE}.c)
@@ -256,9 +280,6 @@
 	set (BIN_FIND true)
 endif()
 
-install (CODE "execute_process (COMMAND ${CMAKE_COMMAND} -E create_symlink ${BIN_FUSE} \"\$ENV{DESTDIR}${bindir}/${PROJECT_NAME}\")")
-install (CODE "execute_process (COMMAND ${CMAKE_COMMAND} -E create_symlink ${BIN_FUSE}.1.gz \"\$ENV{DESTDIR}${mandir}/man1/${PROJECT_NAME}.1.gz\")")
-
 set_directory_properties(PROPERTIES ADDITIONAL_MAKE_CLEAN_FILES "${CLEAN_FILES}")
 
 # Travis' test target
diff '--color=auto' -uNr dislocker-0.7.3/src/common.c dislocker-master/src/common.c
--- dislocker-0.7.3/src/common.c	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/common.c	2024-06-07 06:17:42.000000000 -0300
@@ -306,7 +306,7 @@
 /**
  * Clean memory before freeing
  *
- * @param ptr A pointeur to the memory region
+ * @param ptr A pointer to the memory region
  * @param size The size of the region
  */
 void memclean(void* ptr, size_t size)
@@ -340,4 +340,3 @@
 }
 
 #endif /* _HAVE_RUBY */
-
diff '--color=auto' -uNr dislocker-0.7.3/src/config.c dislocker-master/src/config.c
--- dislocker-0.7.3/src/config.c	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/config.c	2024-06-07 06:17:42.000000000 -0300
@@ -56,13 +56,13 @@
 static void setclearkey(dis_context_t dis_ctx, char* optarg)
 {
 	(void) optarg;
-	int true = TRUE;
-	dis_setopt(dis_ctx, DIS_OPT_USE_CLEAR_KEY, &true);
+	int trueval = TRUE;
+	dis_setopt(dis_ctx, DIS_OPT_USE_CLEAR_KEY, &trueval);
 }
 static void setbekfile(dis_context_t dis_ctx, char* optarg)
 {
-	int true = TRUE;
-	dis_setopt(dis_ctx, DIS_OPT_USE_BEK_FILE, &true);
+	int trueval = TRUE;
+	dis_setopt(dis_ctx, DIS_OPT_USE_BEK_FILE, &trueval);
 	dis_setopt(dis_ctx, DIS_OPT_SET_BEK_FILE_PATH, optarg);
 }
 static void setforceblock(dis_context_t dis_ctx, char* optarg)
@@ -76,14 +76,14 @@
 }
 static void setfvek(dis_context_t dis_ctx, char* optarg)
 {
-	int true = TRUE;
-	dis_setopt(dis_ctx, DIS_OPT_USE_FVEK_FILE, &true);
+	int trueval = TRUE;
+	dis_setopt(dis_ctx, DIS_OPT_USE_FVEK_FILE, &trueval);
 	dis_setopt(dis_ctx, DIS_OPT_SET_FVEK_FILE_PATH, optarg);
 }
 static void setvmk(dis_context_t dis_ctx, char* optarg)
 {
-	int true = TRUE;
-	dis_setopt(dis_ctx, DIS_OPT_USE_VMK_FILE, &true);
+	int trueval = TRUE;
+	dis_setopt(dis_ctx, DIS_OPT_USE_VMK_FILE, &trueval);
 	dis_setopt(dis_ctx, DIS_OPT_SET_VMK_FILE_PATH, optarg);
 }
 static void setlogfile(dis_context_t dis_ctx, char* optarg)
@@ -97,8 +97,8 @@
 }
 static void setrecoverypwd(dis_context_t dis_ctx, char* optarg)
 {
-	int true = TRUE;
-	dis_setopt(dis_ctx, DIS_OPT_USE_RECOVERY_PASSWORD, &true);
+	int trueval = TRUE;
+	dis_setopt(dis_ctx, DIS_OPT_USE_RECOVERY_PASSWORD, &trueval);
 	dis_setopt(dis_ctx, DIS_OPT_SET_RECOVERY_PASSWORD, optarg);
 	hide_opt(optarg);
 }
@@ -111,19 +111,19 @@
 static void setro(dis_context_t dis_ctx, char* optarg)
 {
 	(void) optarg;
-	int true = TRUE;
-	dis_setopt(dis_ctx, DIS_OPT_READ_ONLY, &true);
+	int trueval = TRUE;
+	dis_setopt(dis_ctx, DIS_OPT_READ_ONLY, &trueval);
 }
 static void setstateok(dis_context_t dis_ctx, char* optarg)
 {
 	(void) optarg;
-	int true = TRUE;
-	dis_setopt(dis_ctx, DIS_OPT_DONT_CHECK_VOLUME_STATE, &true);
+	int trueval = TRUE;
+	dis_setopt(dis_ctx, DIS_OPT_DONT_CHECK_VOLUME_STATE, &trueval);
 }
 static void setuserpassword(dis_context_t dis_ctx, char* optarg)
 {
-	int true = TRUE;
-	dis_setopt(dis_ctx, DIS_OPT_USE_USER_PASSWORD, &true);
+	int trueval = TRUE;
+	dis_setopt(dis_ctx, DIS_OPT_USE_USER_PASSWORD, &trueval);
 	dis_setopt(dis_ctx, DIS_OPT_SET_USER_PASSWORD, optarg);
 	hide_opt(optarg);
 }
@@ -266,7 +266,7 @@
 		return -1;
 
 	dis_config_t* cfg = &dis_ctx->cfg;
-	int true = TRUE;
+	int trueval = TRUE;
 
 
 	long_opts = malloc(nb_options * sizeof(struct option));
@@ -285,12 +285,12 @@
 		{
 			case 'c':
 			{
-				dis_setopt(dis_ctx, DIS_OPT_USE_CLEAR_KEY, &true);
+				dis_setopt(dis_ctx, DIS_OPT_USE_CLEAR_KEY, &trueval);
 				break;
 			}
 			case 'f':
 			{
-				dis_setopt(dis_ctx, DIS_OPT_USE_BEK_FILE, &true);
+				dis_setopt(dis_ctx, DIS_OPT_USE_BEK_FILE, &trueval);
 				dis_setopt(dis_ctx, DIS_OPT_SET_BEK_FILE_PATH, optarg);
 				break;
 			}
@@ -312,13 +312,13 @@
 			}
 			case 'k':
 			{
-				dis_setopt(dis_ctx, DIS_OPT_USE_FVEK_FILE, &true);
+				dis_setopt(dis_ctx, DIS_OPT_USE_FVEK_FILE, &trueval);
 				dis_setopt(dis_ctx, DIS_OPT_SET_FVEK_FILE_PATH, optarg);
 				break;
 			}
 			case 'K':
 			{
-				dis_setopt(dis_ctx, DIS_OPT_USE_VMK_FILE, &true);
+				dis_setopt(dis_ctx, DIS_OPT_USE_VMK_FILE, &trueval);
 				dis_setopt(dis_ctx, DIS_OPT_SET_VMK_FILE_PATH, optarg);
 				break;
 			}
@@ -340,7 +340,7 @@
 			}
 			case 'p':
 			{
-				dis_setopt(dis_ctx, DIS_OPT_USE_RECOVERY_PASSWORD, &true);
+				dis_setopt(dis_ctx, DIS_OPT_USE_RECOVERY_PASSWORD, &trueval);
 				dis_setopt(dis_ctx, DIS_OPT_SET_RECOVERY_PASSWORD, optarg);
 				hide_opt(optarg);
 				break;
@@ -353,17 +353,17 @@
 			}
 			case 'r':
 			{
-				dis_setopt(dis_ctx, DIS_OPT_READ_ONLY, &true);
+				dis_setopt(dis_ctx, DIS_OPT_READ_ONLY, &trueval);
 				break;
 			}
 			case 's':
 			{
-				dis_setopt(dis_ctx, DIS_OPT_DONT_CHECK_VOLUME_STATE, &true);
+				dis_setopt(dis_ctx, DIS_OPT_DONT_CHECK_VOLUME_STATE, &trueval);
 				break;
 			}
 			case 'u':
 			{
-				dis_setopt(dis_ctx, DIS_OPT_USE_USER_PASSWORD, &true);
+				dis_setopt(dis_ctx, DIS_OPT_USE_USER_PASSWORD, &trueval);
 				dis_setopt(dis_ctx, DIS_OPT_SET_USER_PASSWORD, optarg);
 				hide_opt(optarg);
 				break;
@@ -828,4 +828,3 @@
 		return -1;
 	return !(dis_ctx->cfg.flags & DIS_FLAG_DONT_CHECK_VOLUME_STATE);
 }
-
diff '--color=auto' -uNr dislocker-0.7.3/src/dislocker-bek.c dislocker-master/src/dislocker-bek.c
--- dislocker-0.7.3/src/dislocker-bek.c	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/dislocker-bek.c	2024-06-07 06:17:42.000000000 -0300
@@ -132,4 +132,3 @@
 
 	return EXIT_SUCCESS;
 }
-
diff '--color=auto' -uNr dislocker-0.7.3/src/dislocker.c dislocker-master/src/dislocker.c
--- dislocker-0.7.3/src/dislocker.c	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/dislocker.c	2024-06-07 06:17:42.000000000 -0300
@@ -66,7 +66,7 @@
 
 
 
-/* Get low-level errors the library encoutered by looking at this variable */
+/* Get low-level errors the library encountered by looking at this variable */
 int dis_errno;
 
 
@@ -183,6 +183,8 @@
 		return DIS_RET_ERROR_ALLOC;
 	}
 
+	dis_ctx->metadata->cfg->readonly = (dis_ctx->cfg.flags & DIS_FLAG_READ_ONLY) ? 1 : 0;
+
 	ret = dis_metadata_initialize(dis_ctx->metadata);
 	dis_ctx->curr_state = dis_meta_cfg->curr_state;
 	if(ret != DIS_RET_SUCCESS)
@@ -326,7 +328,7 @@
 		return -EFAULT;
 	}
 
-	if(offset >= (off_t)dis_ctx->io_data.volume_size)
+	if((offset >= (off_t)dis_ctx->io_data.volume_size) && !dis_metadata_is_decrypted_state(dis_ctx->io_data.metadata))
 	{
 		dis_printf(
 			L_ERROR,
diff '--color=auto' -uNr dislocker-0.7.3/src/dislocker-fuse.c dislocker-master/src/dislocker-fuse.c
--- dislocker-0.7.3/src/dislocker-fuse.c	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/dislocker-fuse.c	2024-06-07 06:17:42.000000000 -0300
@@ -32,12 +32,7 @@
 #include "dislocker/dislocker.h"
 
 
-
-#ifdef __DARWIN
-# include <osxfuse/fuse.h>
-#else
 # include <fuse.h>
-#endif /* __DARWIN */
 
 
 /** NTFS virtual partition's name */
@@ -204,6 +199,8 @@
 	/* Get command line options */
 	dis_ctx = dis_new();
 	param_idx = dis_getopts(dis_ctx, argc, argv);
+	if (param_idx == -1)
+		exit(EXIT_FAILURE);
 
 	/*
 	 * Check we have a volume path given and if not, take the first non-argument
diff '--color=auto' -uNr dislocker-0.7.3/src/dislocker-metadata.c dislocker-master/src/dislocker-metadata.c
--- dislocker-0.7.3/src/dislocker-metadata.c	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/dislocker-metadata.c	2024-06-07 06:17:42.000000000 -0300
@@ -131,6 +131,7 @@
 	dis_meta_cfg = dis_metadata_config_new();
 	dis_meta_cfg->fve_fd       = fve_fd;
 	dis_meta_cfg->offset       = offset;
+	dis_meta_cfg->readonly     = 1;
 
 	dis_metadata = dis_metadata_new(dis_meta_cfg);
 	if(dis_metadata_initialize(dis_metadata) != DIS_RET_SUCCESS)
diff '--color=auto' -uNr dislocker-0.7.3/src/dislocker.rb dislocker-master/src/dislocker.rb
--- dislocker-0.7.3/src/dislocker.rb	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/dislocker.rb	2024-06-07 06:17:42.000000000 -0300
@@ -12,7 +12,7 @@
 
     depends_on 'mbedtls'
     depends_on 'cmake'
-#    This dependency is seperately installed, as a cask
+#    This dependency is separately installed, as a cask
 #    depends_on :osxfuse
 
     def install
diff '--color=auto' -uNr dislocker-0.7.3/src/encryption/aes-xts.c dislocker-master/src/encryption/aes-xts.c
--- dislocker-0.7.3/src/encryption/aes-xts.c	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/encryption/aes-xts.c	2024-06-07 06:17:42.000000000 -0300
@@ -303,4 +303,3 @@
 
 	return( 0 );
 }
-
diff '--color=auto' -uNr dislocker-0.7.3/src/encryption/diffuser.c dislocker-master/src/encryption/diffuser.c
--- dislocker-0.7.3/src/encryption/diffuser.c	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/encryption/diffuser.c	2024-06-07 06:17:42.000000000 -0300
@@ -177,5 +177,3 @@
 		Bcycles--;
 	}
 }
-
-
diff '--color=auto' -uNr dislocker-0.7.3/src/encryption/encrypt.c dislocker-master/src/encryption/encrypt.c
--- dislocker-0.7.3/src/encryption/encrypt.c	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/encryption/encrypt.c	2024-06-07 06:17:42.000000000 -0300
@@ -57,7 +57,7 @@
 
 
 /**
- * Encrypt a sector whithout the diffuser
+ * Encrypt a sector without the diffuser
  *
  * @param ctx AES's contexts
  * @param sector_size Size of a sector (in bytes)
@@ -173,6 +173,3 @@
 		buffer
 	);
 }
-
-
-
diff '--color=auto' -uNr dislocker-0.7.3/src/inouts/inouts.c dislocker-master/src/inouts/inouts.c
--- dislocker-0.7.3/src/inouts/inouts.c	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/inouts/inouts.c	2024-06-07 06:17:42.000000000 -0300
@@ -105,4 +105,3 @@
 
 	return dis_ctx->io_data.sector_size;
 }
-
diff '--color=auto' -uNr dislocker-0.7.3/src/inouts/prepare.c dislocker-master/src/inouts/prepare.c
--- dislocker-0.7.3/src/inouts/prepare.c	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/inouts/prepare.c	2024-06-07 06:17:42.000000000 -0300
@@ -109,6 +109,10 @@
 	io_data->decrypt_region = read_decrypt_sectors;
 	io_data->encrypt_region = encrypt_write_sectors;
 	io_data->encrypted_volume_size = dis_metadata_encrypted_volume_size(io_data->metadata);
+	if (io_data->metadata->information->version == V_VISTA) {
+		io_data->encrypted_volume_size = dis_metadata_volume_size_from_vbr(dis_ctx->metadata);
+		io_data->encrypted_volume_size += io_data->sector_size;		//The volume size of Vista should include the DBR backup
+	}
 	io_data->backup_sectors_addr   = dis_metadata_ntfs_sectors_address(io_data->metadata);
 	io_data->nb_backup_sectors     = dis_metadata_backup_sectors_count(io_data->metadata);
 
@@ -116,7 +120,7 @@
 	 * Get volume size directly from dis_metadata_t, which is more accurate.
 	 */
 	io_data->volume_size = io_data->encrypted_volume_size;
-	if(io_data->volume_size == 0)
+	if(io_data->volume_size == 0 && !dis_metadata_is_decrypted_state(io_data->metadata))
 	{
 		dis_printf(L_ERROR, "Can't initialize the volume's size\n");
 		return DIS_RET_ERROR_VOLUME_SIZE_NOT_FOUND;
@@ -136,4 +140,3 @@
 
 	return DIS_RET_SUCCESS;
 }
-
diff '--color=auto' -uNr dislocker-0.7.3/src/inouts/sectors.c dislocker-master/src/inouts/sectors.c
--- dislocker-0.7.3/src/inouts/sectors.c	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/inouts/sectors.c	2024-06-07 06:17:42.000000000 -0300
@@ -112,7 +112,7 @@
 
 	size_t   nb_loop = 0;
 	size_t   size    = nb_read_sector * sector_size;
-	uint8_t* input   = malloc(size);
+	uint8_t* input   = dis_malloc(size);
 	off_t    off     = sector_start + io_data->part_off;
 
 	memset(input , 0, size);
@@ -123,7 +123,7 @@
 
 	if(read_size <= 0)
 	{
-		free(input);
+		dis_free(input);
 		dis_printf(
 			L_ERROR,
 			"Unable to read %#" F_SIZE_T " bytes from %#" F_OFF_T "\n",
@@ -191,7 +191,7 @@
 #endif
 
 
-	free(input);
+	dis_free(input);
 
 	return TRUE;
 }
@@ -220,7 +220,7 @@
 	if(!io_data || !input)
 		return FALSE;
 
-	uint8_t* output = malloc(nb_write_sector * sector_size);
+	uint8_t* output = dis_malloc(nb_write_sector * sector_size);
 
 	memset(output , 0, nb_write_sector * sector_size);
 
@@ -281,7 +281,7 @@
 		sector_start + io_data->part_off
 	);
 
-	free(output);
+	dis_free(output);
 	if(write_size <= 0)
 		return FALSE;
 
@@ -309,6 +309,7 @@
 	uint16_t version      = dis_metadata_information_version(io_data->metadata);
 	uint16_t sector_size  = args->sector_size;
 	uint16_t step_size    = (uint16_t) (sector_size * step_unit);
+	uint64_t encrypted_volume_total_sectors = io_data->encrypted_volume_size / sector_size;
 
 	off_t    offset       = args->sector_start + sector_size * loop;
 	uint8_t* loop_input   = args->input + sector_size * loop;
@@ -375,12 +376,12 @@
 			);
 			memcpy(loop_output, loop_input, sector_size);
 		}
-		else if(version == V_VISTA && sector_offset < 16)
+		else if(version == V_VISTA && (sector_offset < 16 || sector_offset + 1 == (off_t) encrypted_volume_total_sectors))
 		{
 			/*
 			 * The firsts sectors are not really encrypted on a Vista volume
 			 */
-			if(sector_offset < 1)
+			if(sector_offset < 1 || sector_offset + 1 == (off_t) encrypted_volume_total_sectors)
 				fix_read_sector_vista(
 					io_data,
 					loop_input,
@@ -433,6 +434,7 @@
 	uint16_t version     = dis_metadata_information_version(io_data->metadata);
 	uint16_t sector_size = args->sector_size;
 	uint16_t step_size   = (uint16_t) (sector_size * step_unit);
+	uint64_t encrypted_volume_total_sectors = io_data->encrypted_volume_size / sector_size;
 
 	uint8_t* loop_input  = args->input + sector_size * loop;
 	uint8_t* loop_output = args->output + sector_size * loop;
@@ -448,7 +450,7 @@
 		/*
 		 * Just encrypt this sector
 		 * Exception: don't encrypt it if the sector wasn't (as in the
-		 * "BitLocker's-volume-encryption-was-paused case decribed in the
+		 * "BitLocker's-volume-encryption-was-paused case described in the
 		 * decryption function above")
 		 */
 
@@ -458,12 +460,12 @@
 		 * NOTE: Seven specificities are dealt with earlier in the process
 		 * see dislocker.c:enlock()
 		 */
-		if(version == V_VISTA && sector_offset < 16)
+		if(version == V_VISTA && (sector_offset < 16 || sector_offset + 1 == (off_t) encrypted_volume_total_sectors))
 		{
 			/*
 			 * The firsts sectors are not really encrypted on a Vista volume
 			 */
-			if(sector_offset < 1)
+			if(sector_offset < 1 || sector_offset + 1 == (off_t) encrypted_volume_total_sectors)
 				fix_write_sector_vista(
 					io_data,
 					loop_input,
@@ -612,4 +614,3 @@
 
 	dis_metadata_vista_vbr_ntfs2fve(io_data->metadata, output);
 }
-
diff '--color=auto' -uNr dislocker-0.7.3/src/logs/event_descriptors.c dislocker-master/src/logs/event_descriptors.c
--- dislocker-0.7.3/src/logs/event_descriptors.c	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/logs/event_descriptors.c	2024-06-07 06:17:42.000000000 -0300
@@ -504,4 +504,3 @@
 		.keyword = 0x8000000000000000
 	};
 }
-
diff '--color=auto' -uNr dislocker-0.7.3/src/mbed_install.sh dislocker-master/src/mbed_install.sh
--- dislocker-0.7.3/src/mbed_install.sh	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/mbed_install.sh	2024-06-07 06:17:42.000000000 -0300
@@ -2,17 +2,17 @@
 
 MBEDTLS_FOLDER=mbedtls-for-dislocker
 
-if brew info mbedtls |head -1 |grep -q 2.0.0
+if brew info mbedtls | head -1 | grep -q 2.0.0
 then
-	git clone https://github.com/ARMmbed/mbedtls.git ${MBEDTLS_FOLDER}
-	cd ${MBEDTLS_FOLDER}
+	git clone https://github.com/ARMmbed/mbedtls.git "${MBEDTLS_FOLDER}"
+	cd "${MBEDTLS_FOLDER}"
 	git checkout mbedtls-2.0.0
 	git cherry-pick -n --strategy=recursive -Xours 6f42417ba8dd28fa77fd08d42d73c87a0253f93e
 	cmake .
 	make VERBOSE=1
 	make install
 	cd ..
-	rm -fr ${MBEDTLS_FOLDER}
+	rm -fr "${MBEDTLS_FOLDER}"
 else
 	brew install -v polarssl
 fi
diff '--color=auto' -uNr dislocker-0.7.3/src/metadata/datums.c dislocker-master/src/metadata/datums.c
--- dislocker-0.7.3/src/metadata/datums.c	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/metadata/datums.c	2024-06-07 06:17:42.000000000 -0300
@@ -163,7 +163,7 @@
  * string format
  * @warning This returned string has to be free()d
  *
- * @param value_type The datum's value type to tranform
+ * @param value_type The datum's value type to transform
  * @return The decoded string or NULL if there's no signification (index out of
  * bound)
  */
@@ -202,8 +202,7 @@
 			header->entry_type, header->value_type, header->error_status);
 
 	/* Now check if the header is good */
-	if(header->datum_size < sizeof(datum_header_safe_t) ||
-	   header->value_type > NB_DATUMS_VALUE_TYPES)
+	if(header->datum_size < sizeof(datum_header_safe_t))
 		return FALSE;
 
 	return TRUE;
@@ -230,6 +229,9 @@
 	if(!get_header_safe(data, &header))
 		return FALSE;
 
+	if(header.value_type >= NB_DATUMS_VALUE_TYPES)
+		return FALSE;
+
 	size_header = datum_value_types_prop[header.value_type].size_header;
 
 	if(header.datum_size <= size_header)
@@ -327,7 +329,7 @@
 	datum_key_t* datum = (datum_key_t*) vdatum;
 	char* cipher_str = cipherstr((cipher_t) datum->algo);
 
-	dis_printf(level, "Unkown: \n");
+	dis_printf(level, "Unknown: \n");
 	hexdump(level, (void*) &datum->padd, 2);
 	dis_printf(level, "Algo: %s (%#hx)\n", cipher_str, datum->algo);
 	dis_printf(level, "Key:\n");
@@ -368,7 +370,7 @@
 {
 	datum_stretch_key_t* datum = (datum_stretch_key_t*) vdatum;
 
-	dis_printf(level, "Unkown: \n");
+	dis_printf(level, "Unknown: \n");
 	hexdump(level, (void*) &datum->padd, 2);
 	dis_printf(level, "Algo: %#x\n", datum->algo);
 	dis_printf(level, "Salt: \n");
@@ -580,7 +582,7 @@
 	void** datum_result)
 {
 	// Check parameters
-	if(!dis_meta || value_type > NB_DATUMS_VALUE_TYPES)
+	if(!dis_meta)
 		return FALSE;
 
 	dis_printf(L_DEBUG, "Entering get_next_datum...\n");
@@ -660,6 +662,9 @@
 	if(!get_header_safe(datum, &header))
 		return FALSE;
 
+	if(header.value_type >= NB_DATUMS_VALUE_TYPES)
+		return FALSE;
+
 	if(!datum_value_types_prop[header.value_type].has_nested_datum)
 		return FALSE;
 
@@ -757,7 +762,7 @@
 
 	dis_printf(L_DEBUG, "Entering has_clear_key. Returning result of get_vmk_datum_from_range with range between 0x00 and 0xff\n");
 
-	return get_vmk_datum_from_range(dis_meta, 0x00, 0xff, vmk_datum);
+	return get_vmk_datum_from_range(dis_meta, 0x00, 0xff, vmk_datum, NULL);
 }
 
 
diff '--color=auto' -uNr dislocker-0.7.3/src/metadata/fvek.c dislocker-master/src/metadata/fvek.c
--- dislocker-0.7.3/src/metadata/fvek.c	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/metadata/fvek.c	2024-06-07 06:17:42.000000000 -0300
@@ -104,6 +104,7 @@
 			"VMK size too big, unsupported: %#" F_SIZE_T "\n",
 			vmk_key_size
 		);
+		dis_free(vmk_key);
 		return FALSE;
 	}
 
@@ -126,6 +127,7 @@
 
 		dis_printf(L_CRITICAL, "Can't decrypt correctly the FVEK. Abort.\n");
 		dis_free(*fvek_datum);
+		dis_free(vmk_key);
 		return FALSE;
 	}
 
@@ -168,10 +170,10 @@
 	} enc_method;
 
 	memset(enc_method.multi, 0, 2);
-	char fvek_keys[64] = {0,};
-
-	off_t expected_size = sizeof(enc_method) + sizeof(fvek_keys);
-
+	char fvek_key_buffer[64] = {0,};
+	off_t expected_file_size_64bit_key = sizeof(enc_method) + 32;
+	off_t expected_file_size_128bit_key = sizeof(enc_method) + 64;
+	off_t used_key_size = 0;
 
 	file_fd = dis_open(cfg->fvek_file, O_RDONLY);
 	if(file_fd == -1)
@@ -183,17 +185,20 @@
 	/* Check the file's size */
 	actual_size = dis_lseek(file_fd, 0, SEEK_END);
 
-	if(actual_size != expected_size)
+	if(actual_size != expected_file_size_64bit_key && actual_size != expected_file_size_128bit_key)
 	{
 		dis_printf(
 			L_ERROR,
-			"Wrong FVEK file size, expected %d but has %d\n",
-			expected_size,
+			"Wrong FVEK file size, expected %d or %d but has %d\n",
+			expected_file_size_64bit_key,
+			expected_file_size_128bit_key,
 			actual_size
 		);
 		return FALSE;
 	}
 
+	used_key_size = actual_size - sizeof(enc_method);
+
 	/* Read everything */
 	dis_lseek(file_fd, 0, SEEK_SET);
 	rs = dis_read(file_fd, enc_method.multi, sizeof(enc_method));
@@ -205,8 +210,8 @@
 		);
 		return FALSE;
 	}
-	rs = dis_read(file_fd, fvek_keys,  sizeof(fvek_keys));
-	if(rs != sizeof(fvek_keys))
+	rs = dis_read(file_fd, fvek_key_buffer, used_key_size);
+	if(rs != used_key_size)
 	{
 		dis_printf(L_ERROR, "Cannot read whole FVEK keys in the FVEK file\n");
 		return FALSE;
@@ -214,11 +219,11 @@
 
 
 	/* Create the FVEK datum */
-	*fvek_datum = dis_malloc(sizeof(datum_key_t) + sizeof(fvek_keys));
+	*fvek_datum = dis_malloc(sizeof(datum_key_t) + used_key_size);
 
 	/* ... create the header */
 	datum_key = *fvek_datum;
-	datum_key->header.datum_size = sizeof(datum_key_t) + sizeof(fvek_keys);
+	datum_key->header.datum_size = sizeof(datum_key_t) + used_key_size;
 	datum_key->header.entry_type = 3;
 	datum_key->header.value_type = DATUMS_VALUE_KEY;
 	datum_key->header.error_status = 1;
@@ -227,7 +232,7 @@
 	datum_key->padd = 0;
 
 	/* ... copy the keys */
-	memcpy((char*) *fvek_datum + sizeof(datum_key_t), fvek_keys, sizeof(fvek_keys));
+	memcpy((char*) *fvek_datum + sizeof(datum_key_t), fvek_key_buffer, used_key_size);
 
 
 	return TRUE;
diff '--color=auto' -uNr dislocker-0.7.3/src/metadata/metadata.c dislocker-master/src/metadata/metadata.c
--- dislocker-0.7.3/src/metadata/metadata.c	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/metadata/metadata.c	2024-06-07 06:17:42.000000000 -0300
@@ -216,7 +216,7 @@
 	{
 		dis_printf(
 			L_CRITICAL,
-			"A problem occured during the retrieving of metadata. Abort.\n"
+			"A problem occurred during the retrieving of metadata. Abort.\n"
 		);
 		return DIS_RET_ERROR_METADATA_CHECK;
 	}
@@ -454,8 +454,10 @@
 			        " failed\n", source);
 		}
 
-		dis_printf(L_ERROR, "EOW volume GUID not supported.\n");
-		return FALSE;
+		if (!dis_meta->cfg->readonly) {
+			dis_printf(L_ERROR, "EOW volume GUID not supported for writing.\n");
+			return FALSE;
+        }
 	}
 	else
 	{
@@ -730,7 +732,7 @@
 
 	*metadata = dis_malloc(size);
 
-	// Copy the header at the begining of the metadata
+	// Copy the header at the beginning of the metadata
 	memcpy(*metadata, &information, sizeof(bitlocker_information_t));
 
 	dis_printf(L_DEBUG, "Reading data...\n");
@@ -829,11 +831,11 @@
 		return FALSE;
 	}
 
-	size_t rest_size = size - sizeof(bitlocker_information_t);
+	size_t rest_size = size - sizeof(bitlocker_eow_infos_t);
 
 	*eow_infos = dis_malloc(size);
 
-	// Copy the header at the begining of the EOW information
+	// Copy the header at the beginning of the EOW information
 	memcpy(*eow_infos, &eow_infos_hdr, sizeof(bitlocker_eow_infos_t));
 
 	dis_printf(L_DEBUG, "Reading EOW information's payload...\n");
@@ -1006,6 +1008,8 @@
 	off_t         curr_offset = 0;
 	int           payload_size = 0;
 
+	unsigned char* crc_temp_buffer;
+
 	while(current < 2)
 	{
 		/* Compute the on-disk offset */
@@ -1043,7 +1047,12 @@
 
 		/* Check the crc32 validity */
 		eow_infos_size = eow_infos_hdr->infos_size;
-		computed_crc32 = crc32((unsigned char*)*eow_infos, eow_infos_size);
+
+		crc_temp_buffer = (unsigned char*)dis_malloc(eow_infos_size);
+		memcpy(crc_temp_buffer, *eow_infos, eow_infos_size);
+		((bitlocker_eow_infos_t*)crc_temp_buffer)->crc32 = 0;
+		computed_crc32 = crc32(crc_temp_buffer, eow_infos_size);
+		dis_free(crc_temp_buffer);
 
 		dis_printf(L_DEBUG, "Looking if %#x == %#x for EOW information validation\n",
 		        computed_crc32, eow_infos_hdr->crc32);
@@ -1150,7 +1159,7 @@
 	memcpy(volume_header->signature, NTFS_SIGNATURE, NTFS_SIGNATURE_SIZE);
 
 	/* And this is for the MFT Mirror field */
-	volume_header->mft_mirror = dis_meta->volume_header->mft_mirror;
+	volume_header->mft_mirror = dis_metadata_mftmirror(dis_meta);
 }
 
 
@@ -1318,6 +1327,9 @@
 	return dis_meta->information->nb_backup_sectors;
 }
 
+int dis_metadata_is_decrypted_state(dis_metadata_t dis_meta) {
+	return dis_meta->information->curr_state == METADATA_STATE_DECRYPTED;
+}
 
 #ifdef _HAVE_RUBY
 #include <sys/types.h>
diff '--color=auto' -uNr dislocker-0.7.3/src/metadata/print_metadata.c dislocker-master/src/metadata/print_metadata.c
--- dislocker-0.7.3/src/metadata/print_metadata.c	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/metadata/print_metadata.c	2024-06-07 06:17:42.000000000 -0300
@@ -122,7 +122,7 @@
 	dis_printf(level, "  Current state: %s (%hu)\n", get_state_str(information->curr_state), information->curr_state);
 	dis_printf(level, "  Next state: %s (%hu)\n",    get_state_str(information->next_state), information->next_state);
 	dis_printf(level, "  Encrypted volume size: %1$" PRIu64 " bytes (%1$#" PRIx64 "), ~%2$" PRIu64 " MB\n", information->encrypted_volume_size, information->encrypted_volume_size / (1024*1024));
-	dis_printf(level, "  Size of convertion region: %1$#x (%1$u)\n", information->convert_size);
+	dis_printf(level, "  Size of conversion region: %1$#x (%1$u)\n", information->convert_size);
 	dis_printf(level, "  Number of boot sectors backuped: %1$u sectors (%1$#x)\n", information->nb_backup_sectors);
 	dis_printf(level, "  First metadata header offset:  %#" PRIx64 "\n", information->information_off[0]);
 	dis_printf(level, "  Second metadata header offset: %#" PRIx64 "\n", information->information_off[1]);
@@ -250,4 +250,3 @@
 		data += header.datum_size;
 	}
 }
-
diff '--color=auto' -uNr dislocker-0.7.3/src/metadata/vmk.c dislocker-master/src/metadata/vmk.c
--- dislocker-0.7.3/src/metadata/vmk.c	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/metadata/vmk.c	2024-06-07 06:17:42.000000000 -0300
@@ -260,7 +260,7 @@
  * @return TRUE if result can be trusted, FALSE otherwise
  */
 int get_vmk_datum_from_range(dis_metadata_t dis_meta, uint16_t min_range,
-	uint16_t max_range, void** vmk_datum)
+	uint16_t max_range, void** vmk_datum, void* prev_vmk_datum)
 {
 	// Check parameters
 	if(!dis_meta)
@@ -268,7 +268,11 @@
 
 	uint16_t datum_range = 0;
 
-	*vmk_datum = NULL;
+	if (prev_vmk_datum) {
+		*vmk_datum = prev_vmk_datum;
+	} else {
+		*vmk_datum = NULL;
+	}
 
 	while(1)
 	{
diff '--color=auto' -uNr dislocker-0.7.3/src/ntfs/clock.c dislocker-master/src/ntfs/clock.c
--- dislocker-0.7.3/src/ntfs/clock.c	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/ntfs/clock.c	2024-06-07 06:17:42.000000000 -0300
@@ -39,4 +39,3 @@
 
 	*ts = (time_t) ((t - (uint64_t)(NTFS_TIME_OFFSET)) / (uint64_t)10000000 );
 }
-
diff '--color=auto' -uNr dislocker-0.7.3/src/samples/metadata_from_userpass.rb dislocker-master/src/samples/metadata_from_userpass.rb
--- dislocker-0.7.3/src/samples/metadata_from_userpass.rb	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/samples/metadata_from_userpass.rb	2024-06-07 06:17:42.000000000 -0300
@@ -51,4 +51,3 @@
 
 puts ". FVEK found:"
 puts fvek
-
diff '--color=auto' -uNr dislocker-0.7.3/src/xstd/xstdio.c dislocker-master/src/xstd/xstdio.c
--- dislocker-0.7.3/src/xstd/xstdio.c	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/xstd/xstdio.c	2024-06-07 06:17:42.000000000 -0300
@@ -250,4 +250,3 @@
 	fprintf(fds[level], "%s [%s] ", time2string, msg_tab[level]);
 	return vfprintf(fds[level], format, ap);
 }
-
diff '--color=auto' -uNr dislocker-0.7.3/src/xstd/xstdlib.c dislocker-master/src/xstd/xstdlib.c
--- dislocker-0.7.3/src/xstd/xstdlib.c	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/src/xstd/xstdlib.c	2024-06-07 06:17:42.000000000 -0300
@@ -65,5 +65,3 @@
 
 	free(pointer);
 }
-
-
diff '--color=auto' -uNr dislocker-0.7.3/.travis.yml dislocker-master/.travis.yml
--- dislocker-0.7.3/.travis.yml	2020-11-17 17:29:35.000000000 -0300
+++ dislocker-master/.travis.yml	2024-06-07 06:17:42.000000000 -0300
@@ -13,18 +13,20 @@
     - os: linux
       dist: xenial
     - os: osx
+      osx_image: xcode11.6
 
 before_install:
     - echo $PATH
     - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get update -qq; fi
     - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get install -qq libfuse-dev ruby-dev libmbedtls-dev; fi
     - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew update; fi
-    - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew install -v Caskroom/cask/osxfuse; fi
+    - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew install -v Caskroom/cask/macfuse; fi
     - if [ "$TRAVIS_OS_NAME" = "osx" ]; then ./src/mbed_install.sh; fi
     - if [ "$TRAVIS_OS_NAME" = "osx" ]; then export PATH="/usr/bin:/usr/local/bin:$PATH"; fi
 
 install:
-    - cmake .
+    - if [ "$TRAVIS_OS_NAME" = "linux" ]; then cmake .; fi
+    - if [ "$TRAVIS_OS_NAME" = "osx" ]; then cmake . -DCMAKE_C_COMPILER=/usr/bin/clang; fi
     - make VERBOSE=1
     - sudo make install
 
